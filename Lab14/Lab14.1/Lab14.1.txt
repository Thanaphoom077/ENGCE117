#include <stdio.h>
#include <iostream>

int KnapsackBT(int *w, int *v, int n, int wx, int i, int *x);

int main() {
    int n = 5, wx = 11;
    int w[5] = {1, 2, 5, 6, 7};
    int v[5] = {1, 6, 18, 22, 28};
    int *x, vx;
    x = new int[n];
    vx = KnapsackBT(w, v, n, wx, 0, x);
    printf("Value = %d \n", vx);
    for (int i = 0; i < n; i++) printf("%d ", x[i]);
    delete[] x; // อย่าลืมลบหน่วยความจำที่จองไว้
    return 0;
}

int max(int a, int b) {
    return (a > b) ? a : b;
}

int KnapsackBT(int *w, int *v, int n, int wx, int i, int *x) {
    if (i == n) return 0;
    if (w[i] > wx) return KnapsackBT(w, v, n, wx, i + 1, x);

    // ลองแบบไม่ใส่ของ
    int without_i = KnapsackBT(w, v, n, wx, i + 1, x);

    // ลองแบบใส่ของ
    int with_i = v[i] + KnapsackBT(w, v, n, wx - w[i], i + 1, x);

    // เลือกค่าที่ใหญ่ที่สุด
    if (with_i > without_i) {
        x[i] = 1; // เก็บของ
        return with_i;
    } else {
        x[i] = 0; // ไม่เก็บของ
        return without_i;
    }
}
